
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CONJUNCTION DISJUNCTION IMPLICATION LBRACKET NEGATION RBRACKET VARcnf : clause CONJUNCTION cnf\n               | clause\n        clause : LBRACKET literal DISJUNCTION literal RBRACKET\n                  | LBRACKET literal IMPLICATION literal RBRACKET\n                  | literal\n                  | LBRACKET literal RBRACKETliteral : NEGATION VAR\n                   | VAR'
    
_lr_action_items = {'LBRACKET':([0,7,],[3,3,]),'NEGATION':([0,3,7,11,13,],[5,5,5,5,5,]),'VAR':([0,3,5,7,11,13,],[6,6,9,6,6,6,]),'$end':([1,2,4,6,9,10,12,16,17,],[0,-2,-5,-8,-7,-1,-6,-3,-4,]),'CONJUNCTION':([2,4,6,9,12,16,17,],[7,-5,-8,-7,-6,-3,-4,]),'DISJUNCTION':([6,8,9,],[-8,11,-7,]),'IMPLICATION':([6,8,9,],[-8,13,-7,]),'RBRACKET':([6,8,9,14,15,],[-8,12,-7,16,17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cnf':([0,7,],[1,10,]),'clause':([0,7,],[2,2,]),'literal':([0,3,7,11,13,],[4,8,4,14,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cnf","S'",1,None,None,None),
  ('cnf -> clause CONJUNCTION cnf','cnf',3,'p_cnf','lex.py',28),
  ('cnf -> clause','cnf',1,'p_cnf','lex.py',29),
  ('clause -> LBRACKET literal DISJUNCTION literal RBRACKET','clause',5,'p_clause','lex.py',37),
  ('clause -> LBRACKET literal IMPLICATION literal RBRACKET','clause',5,'p_clause','lex.py',38),
  ('clause -> literal','clause',1,'p_clause','lex.py',39),
  ('clause -> LBRACKET literal RBRACKET','clause',3,'p_clause','lex.py',40),
  ('literal -> NEGATION VAR','literal',2,'p_literal','lex.py',51),
  ('literal -> VAR','literal',1,'p_literal','lex.py',52),
]
